/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WeddingIndexRouteImport } from './routes/wedding/index'
import { Route as CookbookIndexRouteImport } from './routes/cookbook/index'
import { Route as ArticlesIndexRouteImport } from './routes/articles/index'
import { Route as CookbookRecipeNameRouteImport } from './routes/cookbook/$recipeName'
import { Route as ArticlesSustainabilityOfShippingRouteImport } from './routes/articles/sustainability-of-shipping'
import { Route as ArticlesHowMoneyCanBuyHappinessRouteImport } from './routes/articles/how-money-can-buy-happiness'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WeddingIndexRoute = WeddingIndexRouteImport.update({
  id: '/wedding/',
  path: '/wedding/',
  getParentRoute: () => rootRouteImport,
} as any)
const CookbookIndexRoute = CookbookIndexRouteImport.update({
  id: '/cookbook/',
  path: '/cookbook/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesIndexRoute = ArticlesIndexRouteImport.update({
  id: '/articles/',
  path: '/articles/',
  getParentRoute: () => rootRouteImport,
} as any)
const CookbookRecipeNameRoute = CookbookRecipeNameRouteImport.update({
  id: '/cookbook/$recipeName',
  path: '/cookbook/$recipeName',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesSustainabilityOfShippingRoute =
  ArticlesSustainabilityOfShippingRouteImport.update({
    id: '/articles/sustainability-of-shipping',
    path: '/articles/sustainability-of-shipping',
    getParentRoute: () => rootRouteImport,
  } as any)
const ArticlesHowMoneyCanBuyHappinessRoute =
  ArticlesHowMoneyCanBuyHappinessRouteImport.update({
    id: '/articles/how-money-can-buy-happiness',
    path: '/articles/how-money-can-buy-happiness',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/articles/how-money-can-buy-happiness': typeof ArticlesHowMoneyCanBuyHappinessRoute
  '/articles/sustainability-of-shipping': typeof ArticlesSustainabilityOfShippingRoute
  '/cookbook/$recipeName': typeof CookbookRecipeNameRoute
  '/articles': typeof ArticlesIndexRoute
  '/cookbook': typeof CookbookIndexRoute
  '/wedding': typeof WeddingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/articles/how-money-can-buy-happiness': typeof ArticlesHowMoneyCanBuyHappinessRoute
  '/articles/sustainability-of-shipping': typeof ArticlesSustainabilityOfShippingRoute
  '/cookbook/$recipeName': typeof CookbookRecipeNameRoute
  '/articles': typeof ArticlesIndexRoute
  '/cookbook': typeof CookbookIndexRoute
  '/wedding': typeof WeddingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/articles/how-money-can-buy-happiness': typeof ArticlesHowMoneyCanBuyHappinessRoute
  '/articles/sustainability-of-shipping': typeof ArticlesSustainabilityOfShippingRoute
  '/cookbook/$recipeName': typeof CookbookRecipeNameRoute
  '/articles/': typeof ArticlesIndexRoute
  '/cookbook/': typeof CookbookIndexRoute
  '/wedding/': typeof WeddingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/articles/how-money-can-buy-happiness'
    | '/articles/sustainability-of-shipping'
    | '/cookbook/$recipeName'
    | '/articles'
    | '/cookbook'
    | '/wedding'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/articles/how-money-can-buy-happiness'
    | '/articles/sustainability-of-shipping'
    | '/cookbook/$recipeName'
    | '/articles'
    | '/cookbook'
    | '/wedding'
  id:
    | '__root__'
    | '/'
    | '/articles/how-money-can-buy-happiness'
    | '/articles/sustainability-of-shipping'
    | '/cookbook/$recipeName'
    | '/articles/'
    | '/cookbook/'
    | '/wedding/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticlesHowMoneyCanBuyHappinessRoute: typeof ArticlesHowMoneyCanBuyHappinessRoute
  ArticlesSustainabilityOfShippingRoute: typeof ArticlesSustainabilityOfShippingRoute
  CookbookRecipeNameRoute: typeof CookbookRecipeNameRoute
  ArticlesIndexRoute: typeof ArticlesIndexRoute
  CookbookIndexRoute: typeof CookbookIndexRoute
  WeddingIndexRoute: typeof WeddingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wedding/': {
      id: '/wedding/'
      path: '/wedding'
      fullPath: '/wedding'
      preLoaderRoute: typeof WeddingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cookbook/': {
      id: '/cookbook/'
      path: '/cookbook'
      fullPath: '/cookbook'
      preLoaderRoute: typeof CookbookIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/': {
      id: '/articles/'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cookbook/$recipeName': {
      id: '/cookbook/$recipeName'
      path: '/cookbook/$recipeName'
      fullPath: '/cookbook/$recipeName'
      preLoaderRoute: typeof CookbookRecipeNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/sustainability-of-shipping': {
      id: '/articles/sustainability-of-shipping'
      path: '/articles/sustainability-of-shipping'
      fullPath: '/articles/sustainability-of-shipping'
      preLoaderRoute: typeof ArticlesSustainabilityOfShippingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/how-money-can-buy-happiness': {
      id: '/articles/how-money-can-buy-happiness'
      path: '/articles/how-money-can-buy-happiness'
      fullPath: '/articles/how-money-can-buy-happiness'
      preLoaderRoute: typeof ArticlesHowMoneyCanBuyHappinessRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticlesHowMoneyCanBuyHappinessRoute: ArticlesHowMoneyCanBuyHappinessRoute,
  ArticlesSustainabilityOfShippingRoute: ArticlesSustainabilityOfShippingRoute,
  CookbookRecipeNameRoute: CookbookRecipeNameRoute,
  ArticlesIndexRoute: ArticlesIndexRoute,
  CookbookIndexRoute: CookbookIndexRoute,
  WeddingIndexRoute: WeddingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
