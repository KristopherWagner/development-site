/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WeddingIndexImport } from './routes/wedding/index'
import { Route as CookbookIndexImport } from './routes/cookbook/index'
import { Route as ArticlesIndexImport } from './routes/articles/index'
import { Route as CookbookRecipeNameImport } from './routes/cookbook/$recipeName'
import { Route as ArticlesSustainabilityOfShippingImport } from './routes/articles/sustainability-of-shipping'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WeddingIndexRoute = WeddingIndexImport.update({
  id: '/wedding/',
  path: '/wedding/',
  getParentRoute: () => rootRoute,
} as any)

const CookbookIndexRoute = CookbookIndexImport.update({
  id: '/cookbook/',
  path: '/cookbook/',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesIndexRoute = ArticlesIndexImport.update({
  id: '/articles/',
  path: '/articles/',
  getParentRoute: () => rootRoute,
} as any)

const CookbookRecipeNameRoute = CookbookRecipeNameImport.update({
  id: '/cookbook/$recipeName',
  path: '/cookbook/$recipeName',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesSustainabilityOfShippingRoute =
  ArticlesSustainabilityOfShippingImport.update({
    id: '/articles/sustainability-of-shipping',
    path: '/articles/sustainability-of-shipping',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/articles/sustainability-of-shipping': {
      id: '/articles/sustainability-of-shipping'
      path: '/articles/sustainability-of-shipping'
      fullPath: '/articles/sustainability-of-shipping'
      preLoaderRoute: typeof ArticlesSustainabilityOfShippingImport
      parentRoute: typeof rootRoute
    }
    '/cookbook/$recipeName': {
      id: '/cookbook/$recipeName'
      path: '/cookbook/$recipeName'
      fullPath: '/cookbook/$recipeName'
      preLoaderRoute: typeof CookbookRecipeNameImport
      parentRoute: typeof rootRoute
    }
    '/articles/': {
      id: '/articles/'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesIndexImport
      parentRoute: typeof rootRoute
    }
    '/cookbook/': {
      id: '/cookbook/'
      path: '/cookbook'
      fullPath: '/cookbook'
      preLoaderRoute: typeof CookbookIndexImport
      parentRoute: typeof rootRoute
    }
    '/wedding/': {
      id: '/wedding/'
      path: '/wedding'
      fullPath: '/wedding'
      preLoaderRoute: typeof WeddingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/articles/sustainability-of-shipping': typeof ArticlesSustainabilityOfShippingRoute
  '/cookbook/$recipeName': typeof CookbookRecipeNameRoute
  '/articles': typeof ArticlesIndexRoute
  '/cookbook': typeof CookbookIndexRoute
  '/wedding': typeof WeddingIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/articles/sustainability-of-shipping': typeof ArticlesSustainabilityOfShippingRoute
  '/cookbook/$recipeName': typeof CookbookRecipeNameRoute
  '/articles': typeof ArticlesIndexRoute
  '/cookbook': typeof CookbookIndexRoute
  '/wedding': typeof WeddingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/articles/sustainability-of-shipping': typeof ArticlesSustainabilityOfShippingRoute
  '/cookbook/$recipeName': typeof CookbookRecipeNameRoute
  '/articles/': typeof ArticlesIndexRoute
  '/cookbook/': typeof CookbookIndexRoute
  '/wedding/': typeof WeddingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/articles/sustainability-of-shipping'
    | '/cookbook/$recipeName'
    | '/articles'
    | '/cookbook'
    | '/wedding'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/articles/sustainability-of-shipping'
    | '/cookbook/$recipeName'
    | '/articles'
    | '/cookbook'
    | '/wedding'
  id:
    | '__root__'
    | '/'
    | '/articles/sustainability-of-shipping'
    | '/cookbook/$recipeName'
    | '/articles/'
    | '/cookbook/'
    | '/wedding/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticlesSustainabilityOfShippingRoute: typeof ArticlesSustainabilityOfShippingRoute
  CookbookRecipeNameRoute: typeof CookbookRecipeNameRoute
  ArticlesIndexRoute: typeof ArticlesIndexRoute
  CookbookIndexRoute: typeof CookbookIndexRoute
  WeddingIndexRoute: typeof WeddingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticlesSustainabilityOfShippingRoute: ArticlesSustainabilityOfShippingRoute,
  CookbookRecipeNameRoute: CookbookRecipeNameRoute,
  ArticlesIndexRoute: ArticlesIndexRoute,
  CookbookIndexRoute: CookbookIndexRoute,
  WeddingIndexRoute: WeddingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/articles/sustainability-of-shipping",
        "/cookbook/$recipeName",
        "/articles/",
        "/cookbook/",
        "/wedding/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/articles/sustainability-of-shipping": {
      "filePath": "articles/sustainability-of-shipping.tsx"
    },
    "/cookbook/$recipeName": {
      "filePath": "cookbook/$recipeName.tsx"
    },
    "/articles/": {
      "filePath": "articles/index.tsx"
    },
    "/cookbook/": {
      "filePath": "cookbook/index.tsx"
    },
    "/wedding/": {
      "filePath": "wedding/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
